apiVersion: v1
kind: Secret
metadata:
  name: logging-loki-s3
  namespace: openshift-logging
stringData:
  access_key_id: <>
  access_key_secret: <>
  bucketnames: lokistoragebucket
  endpoint: https://s3.eu-west-3.amazonaws.com
  region: eu-west-3
---
apiVersion: loki.grafana.com/v1
kind: LokiStack
metadata:
  name: logging-loki
  namespace: openshift-logging
spec:
  managementState: Managed
  rules:
    enabled: true
    namespaceSelector:
      matchLabels:
        openshift.io/log-alerting: 'true'
    selector:
      matchLabels:
        openshift.io/log-alerting: 'true'
  size: 1x.extra-small
  storage:
    schemas:
    - version: v13
      effectiveDate: "2024-03-01"
    secret:
      name: logging-loki-s3
      type: s3
  storageClassName: gp2-csi
  tenants:
    mode: openshift-logging
---
apiVersion: observability.openshift.io/v1alpha1
kind: UIPlugin
metadata:
  name: logging
spec:
  type: Logging
  logging:
    lokiStack:
      name: logging-loki
---
apiVersion: observability.openshift.io/v1
kind: ClusterLogForwarder
metadata:
  annotations:
    observability.openshift.io/log-level: debug
  name: instance
  namespace: openshift-logging
spec:
  serviceAccount:
    name: collector
  outputs:
  - name: default-lokistack
    type: lokiStack
    lokiStack:
      target:
        name: logging-loki
        namespace: openshift-logging
      authentication:
        token:
          from: serviceAccount
    tls:
      ca:
        key: service-ca.crt
        configMapName: openshift-service-ca.crt
  pipelines:
  - name: default-logstore
    inputRefs:
    - application
    - infrastructure
    #- audit
    outputRefs:
    - default-lokistack
